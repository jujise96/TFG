@model List<ElementoUsuarioViewModel>

@{
    ViewData["Title"] = "Página de inicio";
    var tipo = ViewBag.tipoelemento as string;
    var idJuego = ViewBag.idJuego;
    if (Model != null && Model.Any())
    {
        idJuego = Model[0].idJuego;
    }
}

<div class="text-center card">
    <h1 class="display-4">Guía de Supervivencia del Yermo</h1>

    <div class="mb-3">
        @if ((tipo == "Mision" || tipo == "Item") && User.Identity.IsAuthenticated)
        {
            <button class="btn btn-outline-primary btn-sm m-1 filter-button active" data-filter="todos">Todos</button>
            <button class="btn btn-outline-success btn-sm m-1 filter-button" data-filter="completados">Completados</button>
            <button class="btn btn-outline-danger btn-sm m-1 filter-button" data-filter="no-completados">No Completados</button>
        }
        @if (User.IsInRole("Admin"))
        {
            <form method="post" class="d-inline" asp-controller="Home" asp-action="CrearElemento" asp-route-tipo="@tipo" asp-route-idJuego="@idJuego">
                <button type="submit" class="btn btn-outline-secondary m-1 btn-sm">Crear nuevo @tipo</button>
            </form>
        }
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover mt-3">
                <thead>
                    <tr>
                        <th scope="col">Nombre</th>
                        @if ((tipo == "Mision" || tipo == "Item") && User.Identity.IsAuthenticated)
                        {
                            <th scope="col">Completada</th>
                        }

                        @if (Model[0].Progreso != -1)
                        {                            
                            <th scope="col">Progreso</th>

                        }

                        @if (User.IsInRole("Admin"))
                        {
                            <th scope="col">Acciones</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="elemento-lista" data-completada="@item.completada.ToString().ToLower()">
                            <td>
                                <a asp-controller="Home" asp-action="@tipo" asp-route-id="@item.Id" asp-route-idJuego="@item.idJuego">
                                    @item.Nombre
                                </a>
                            </td>

                            @if(item.Progreso != -1)
                            {
                                <td>
                                    <div class="progress mt-2" role="progressbar" aria-label="Example with label" aria-valuenow="@item.Progreso" aria-valuemin="0" aria-valuemax="100">
                                        <div class="progress-bar" style="width: @item.Progreso%">@item.Progreso%</div>
                                    </div>

                                </td>
                            }
                            
                            @if ((tipo == "Mision" || tipo == "Item") && User.Identity.IsAuthenticated)
                            {
                                <td>
                                    <input type="checkbox" class="checkbox-completed" id="marcarcompletada_@item.Id" name="seleccionado_@item.Id" @(item.completada ? "checked" : "") />
                                </td>
                            }
                            @if (User.IsInRole("Admin"))
                            {
                                <td>
                                    <form method="post" asp-controller="Home" asp-action="eliminarelemento" class="d-inline">
                                        <input type="hidden" name="tipo" value="@tipo" />
                                        <input type="hidden" name="idelemento" value="@item.Id" />
                                        <input type="hidden" name="idjuego" value="@item.idJuego" />
                                        <button type="submit" class="btn btn-outline-danger btn-sm m-0">Eliminar @tipo</button>
                                    </form>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>No hay elementos disponibles.</p>
    }
</div>

@section Scripts {
    <script>
        const urlaccion = '@Url.Action("MarcarCompletadaConModelo", "GestionUsuario")';
        const tipo = '@tipo';
        let marcarcompletada = document.querySelectorAll('.checkbox-completed');
        const filterButtons = document.querySelectorAll('.filter-button');
        // Aquí es importante: Ahora `listaElementos` apuntará a las filas de la tabla (<tr>)
        const listaElementos = document.querySelectorAll('.elemento-lista');
        let filtroActivo = 'todos'; // Variable para almacenar el filtro activo

        // Función para aplicar el filtro actual
        function aplicarFiltro() {
            listaElementos.forEach(item => {
                if (filtroActivo === 'todos') {
                    item.style.display = 'table-row'; // Para mostrar la fila de la tabla
                } else if (filtroActivo === 'completados') {
                    const completada = item.getAttribute('data-completada');
                    item.style.display = completada === 'true' ? 'table-row' : 'none';
                } else if (filtroActivo === 'no-completados') {
                    const completada = item.getAttribute('data-completada');
                    item.style.display = completada === 'false' ? 'table-row' : 'none';
                }
            });
        }

        marcarcompletada.forEach(function (checkbox) {
            checkbox.addEventListener('change', async function () {
                const id = this.id.split('_')[1];
                const completada = this.checked;
                const listItem = this.closest('.elemento-lista'); // Sigue siendo `closest` a la fila (<tr>)
                if (listItem) {
                    listItem.setAttribute('data-completada', completada.toString());
                }

                const antiForgeryToken = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]').value;

                const respuesta = await fetch(urlaccion, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': antiForgeryToken // Envía el token
                    },
                    body: JSON.stringify({
                        id: id,
                        tipo: tipo,
                        completada: completada
                    })
                });
                if (respuesta.ok) {
                    // Volver a aplicar el filtro para actualizar la vista
                    aplicarFiltro();
                } else {
                    alert("Error al marcar el elemento.");
                }
            });
        });

        if (filterButtons.length > 0) {
            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    filtroActivo = this.getAttribute('data-filter');
                    aplicarFiltro();
                });
            });
        }

        // Al cargar la página, aplicar el filtro activo inicial (Todos)
        aplicarFiltro();
    </script>
}