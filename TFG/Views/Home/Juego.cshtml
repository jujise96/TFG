@model Juego

@{
    ViewData["Title"] = Model.Nombre;
}

<div class="text-center">
    <h1 class="display-4">Bienvenido a @Model.Nombre</h1>
    <p>Consulta la información del juego y accede a sus contenidos.</p>
    @if (User.Identity.IsAuthenticated)
    {
        @if (User.IsInRole("Admin"))
        {
            <form method="post" asp-controller="Home" asp-action="ModificarElemento" asp-route-tipo="Juego" asp-route-idelemento=@Model.Id>
                <button type="submit" class="btn btn-outline-secondary btn-sm">Modificar juego: @Model.Nombre</button>
            </form>
        }
    }
</div>

<div class="container mt-4">
    <h2>Información del Juego</h2>
    <ul class="list-unstyled">
        <li><strong>Nombre:</strong> @Model.Nombre</li>
        <li><strong>IdElem:</strong> @Model.IdElem</li>
        <li><strong>Descripción:</strong> @Model.Descripcion</li>
    </ul>

    <h2>Secciones disponibles</h2>
    <ul class="list-unstyled">
        <li>
            <a asp-controller="Home" asp-action="Misiones" asp-route-id="@Model.Id">Ver Misiones</a>
        </li>
        <li>
            <a asp-controller="Home" asp-action="Items" asp-route-id="@Model.Id">Ver Ítems</a>
        </li>
        <li>
            <a asp-controller="Home" asp-action="Trucos" asp-route-id="@Model.Id">Ver Truco</a>
        </li>
    </ul>
</div>

<div id="seccion-de-comentarios">
    <p>Cargando comentarios...</p>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var tipoEntidad = "Juego";
            var entidadId = @Model.Id;
            var comentariosDiv = document.getElementById('seccion-de-comentarios');

            fetch(`/Comentario/MostrarComentarios?tipoEntidad=${tipoEntidad}&entidadId=${entidadId}`)
                .then(response => {
                    if (!response.ok) {
                        console.error('Error en la respuesta del servidor:', response.status, response.statusText);
                        comentariosDiv.innerHTML = '<p>Error al cargar los comentarios desde el servidor.</p>';
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.text();
                })
                .then(data => {
                    comentariosDiv.innerHTML = data;
                })
                .catch(error => {
                    console.error('Error de red al cargar los comentarios:', error);
                    comentariosDiv.innerHTML = '<p>Error de red al intentar cargar los comentarios.</p>';
                });
        });

        // Aquí podrías añadir JavaScript para manejar el envío de nuevos comentarios/respuestas por AJAX con fetch también
    </script>
}